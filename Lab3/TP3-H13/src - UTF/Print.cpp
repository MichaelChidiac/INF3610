///////////////////////////////////////////////////////////////////////////////
//
//	Print.cpp
//
///////////////////////////////////////////////////////////////////////////////
#include "Print.h"


///////////////////////////////////////////////////////////////////////////////
//
//	Constructeur
//
///////////////////////////////////////////////////////////////////////////////
Print::Print( sc_module_name zName )
: sc_module(zName)
{
	
}


///////////////////////////////////////////////////////////////////////////////
//
//	Destructeur
//
///////////////////////////////////////////////////////////////////////////////
Print::~Print()
{
}

///////////////////////////////////////////////////////////////////////////////
//
//	EndGame
//
//  Appel PrintWin() et PrintLose() selon le bool
//
///////////////////////////////////////////////////////////////////////////////
void Print::EndGame(bool winner)
{
	if (winner == true)
		PrintWin();
	else
		PrintLose();
}

///////////////////////////////////////////////////////////////////////////////
//
//	SetWordLength
//
//  Initialise les variables
//  Assigne la valeur '_' à currentWord[]
//
///////////////////////////////////////////////////////////////////////////////
void Print::SetWordLength(unsigned int wordLength)
{
	/*

			À compléter

		*/
	nbError_ = 0;
	wordLength_ = wordLength;
	for (int i = 0; i < wordLength_; i++){
		currentWord[i] = '_';
	}
}

///////////////////////////////////////////////////////////////////////////////
//
//	CharacterFound
//
///////////////////////////////////////////////////////////////////////////////
void Print::CharacterFound(unsigned int position, unsigned char charFound)
{
	currentWord[position] = charFound;
}

///////////////////////////////////////////////////////////////////////////////
//
//	AddError
//
//  Incrémente le nombre d'erreur
//
///////////////////////////////////////////////////////////////////////////////
void Print::AddError()
{
	nbError_++;
}

///////////////////////////////////////////////////////////////////////////////
//
//	UpdatePrint
//
//  Affiche le nombre d'erreurs actuel ainsi que le en cours (Ex. Mot : _ B _ _ _ )
//
///////////////////////////////////////////////////////////////////////////////
void Print::UpdatePrint()
{
	cout << "Mot actuel: <" << wordLength_ << "> : " << currentWord << endl;
	cout << "Nombre d'erreur: " << nbError_ << endl;
}

///////////////////////////////////////////////////////////////////////////////
//
//	PrintWin
//
///////////////////////////////////////////////////////////////////////////////
void Print::PrintWin()
{
    cout << "@@@               @@@      @@@@@         @@@@@         @@@@"  << endl;
	cout << "@@@      @@@      @@@      @@@@@         @@@@@@@       @@@@"  << endl;
	cout << " @@@     @@@     @@@                     @@@@ @@@      @@@@"  << endl;
	cout << "  @@@    @@@    @@@        @@@@@         @@@@   @@@    @@@@"  << endl;
	cout << "   @@@   @@@   @@@         @@@@@         @@@@     @@@  @@@@"  << endl;
	cout << "   @@@@@@@@@@@@@@@         @@@@@         @@@@      @@@ @@@@"  << endl;
	cout << "    @@@@@@ @@@@@@          @@@@@         @@@@       @@@@@@@"  << endl;
	cout << "     @@@@   @@@@           @@@@@         @@@@         @@@@@"  << endl;

}


///////////////////////////////////////////////////////////////////////////////
//
//	PrintLose
//
///////////////////////////////////////////////////////////////////////////////
void Print::PrintLose()
{ 
	cout << "@@@@          @@@@@@@@@@@@  @@@@@@@@@@@   @@@@@@@@@@@@@    "  << endl;
	cout << "@@@@          @@@@@@@@@@@@  @@@@@@@@@@@   @@@@@@@@@@@@@   "  << endl;
	cout << "@@@@          @@@@    @@@@  @@@@@         @@@@            "  << endl;
	cout << "@@@@          @@@@    @@@@  @@@@@@@@@@@   @@@@@@@@        "  << endl;
	cout << "@@@@          @@@@    @@@@  @@@@@@@@@@@   @@@@@@@@        "  << endl;
	cout << "@@@@          @@@@    @@@@         @@@@   @@@@            "  << endl;
	cout << "@@@@@@@@@@@@  @@@@@@@@@@@@  @@@@@@@@@@@   @@@@@@@@@@@@@   "  << endl;
	cout << "@@@@@@@@@@@@  @@@@@@@@@@@@  @@@@@@@@@@@   @@@@@@@@@@@@@   "  << endl;
}